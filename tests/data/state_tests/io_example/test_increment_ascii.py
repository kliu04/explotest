import pytest
from pytest_mock import MockerFixture

import io_ex


def test_increment_ascii(mocked_open):
    return_value = io_ex.increment_ascii()
    assert "nfpxnfpx3" == return_value


@pytest.fixture
def mocked_open(mocker: MockerFixture):
    mocked_data = mocker.mock_open(read_data="meowmeow2")
    builtin_open = "builtins.open"
    mocker.patch(builtin_open, mocked_data)


# GENERATED BY ET2:
"""
import dill
import pytest
import io_ex


def test_increment_ascii():
    return_value = io_ex.increment_ascii()
"""
# deficiency: is not a good test, as assertions will vary by what is in `file.txt` at the time
