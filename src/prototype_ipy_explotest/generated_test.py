import ast


class PyTestFixture:
    """
    Represents a PyTest fixture - a provider for a parameter in our FUT.
    """
    depends_on: list['PyTestFixture'] # the fixtures this test depends on
    # TODO: figure out if and how to distinguish between param vs. non-para
    for_var: str # for which variable is this for? is it a param?

    def __init__(self):
        self.depends_on = []

    def __str__(self):
        """
        Returns itself a writeable string of code.
        :return: The code for this fixture. Should be syntactically correct.
        """

class GeneratedTest:
    """
    Represents a test generated by explotest.
    """
    arrange_phase: list[PyTestFixture]
    act_phase: list[ast.AST]  # hmm... is this right?
    assert_phase: list[ast.AST]  # hmm... is this right?
    # TODO: better type annotations. figure out whether we even need to initial
    def __init__(self):
        self.arrange_phase = []
        self.act_phase = []
        self.assert_phase = []

